I ps2 -auxww |   grep was3
grep -r '000000004a7018db014a7a4671075bf7'$'\t''7'$'\t''fa1006bc4a5d921b014a76e243595524'

:set fileformat=unix


LINUX通过下面的命令可以开启允许对外访问的网络端口：

/sbin/iptables -I INPUT -p tcp --dport 8000 -j ACCEPT #开启8000端口

/etc/rc.d/init.d/iptables save #保存配置

/etc/rc.d/init.d/iptables restart #重启服务

查看端口是否已经开放

/etc/init.d/iptables status




1) 重启后生效
开启： chkconfig iptables on
关闭： chkconfig iptables off

2) 即时生效，重启后失效
开启： service iptables start
关闭： service iptables stop 








30 4 * * 1 . /etc/profile;/bin/sh /home/spark/ml-schedulers/bin/contributed_users_collector.sh

10 3 * * * . /etc/profile;/bin/sh /home/spark/ml-schedulers/bin/ad_action_statistics_collector.sh 116


 ps -aux | grep "2929"
检查ssh端口是否开发
nmap -p 2929 122.144.167.91


从一个文件剔除另一个文件重复的内容
comm -23 <(sort backUser_5.txt|uniq) <(sort backUser_5_1.txt|uniq) > retain.txt

jiao ji
comm -12 <(sort a.txt|uniq ) <(sort b.txt|uniq )  

打开文件
nautilus  

找出大文件
find . -type f -size +800M  -print0 | xargs -0 ls -l
find . -type f -size +800M  -print0 | xargs -0 du -h


查找并拷贝
find /Users/seki/git/hsp/server-service/server-service/ad-auto-dispatch/**/ -name "*.java" -exec cp {}  "/Users/seki/Downloads/hsp_sys/自动派发系统/" \;

mac brew command
 ALL_PROXY=socks5://127.0.0.1:1080 brew install  libtool --universal


创建link
ln -s 源文件 目标文件

查看操作系统：
 head -n 1 /etc/issue


 Ubuntu查看端口使用情况，使用netstat命令：

    查看已经连接的服务端口（ESTABLISHED）

    netstat -a

    查看所有的服务端口（LISTEN，ESTABLISHED）
netstat -ap

探测UDP端口通不通，使用如下参数：
nc -vuz 112.91.151.10 4500


gzip -dc myfile.gz | grep abc
gzip -dc default.2017-09-05.log.gz | grep "用户CA信息保存出错"

gzip -dc /opt/logs/java/hry-contract/history/default.2017-10-08.log.gz | grep "上传合同至法大大"

cat  /opt/logs/java/hry-contract/default.log | grep "^1.*调用fdd外部存在接口"

gzip -dc /opt/logs/java/hry-contract/history/default.2017-10-11.log.gz | grep "^1.*调用fdd外部存在接口"

mac
shandsocks5 代理
http://blog.izilong.net/2017/02/03/shadowsocks%E5%85%B1%E4%BA%AB-for-mac/
 /usr/local/Cellar/privoxy/3.0.26/sbin/privoxy --no-daemon /usr/local/etc/privoxy/config
 在局域网内其他主机上，代理设置为Mac的IP，端口为之前设置的8118，即可使用Mac上的shadowsocks代理。
127.0.0.1:1086
 修改forward-socks5t /

删掉注释符，修改为：forward-socks5t / 127.0.0.1:1080 .

注意结尾有”.”，这里的1080为本机shadowsocks的本地端口。

修改listen-address

删掉注释符，修改为listen-address 0.0.0.0:8118

这里的8118为Privoxy的本地监听端口。



1，禁止.DS_store生成：打开   “终端” ，复制黏贴下面的命令，回车执行，重启Mac即可生效。defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE2，恢复.DS_store生成： defaults delete com.apple.desktopservices DSDontWriteNetworkStores


system_profiler SPUSBDataType

作者：Marsokit
链接：https://www.zhihu.com/question/20345704/answer/19471793
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

给普通用户加sudo权限 
切换到root用户下，cd root,运行visudo命令,visudo命令是用来编辑修改/etc/sudoers配置文件

kill 
ps -ef |grep hello |awk '{print $2}'|xargs kill -9

cpu
cat /proc/cpuinfo| grep "cpu cores"| uniq


scp local_file remote_username@remote_ip:remote_folder

ssh root@192.168.2.248 -p  34001  


##新建用户:
*   在Ubuntu13.10下创建一个新的用户：
*   Step1：添加新用户
*   useradd -r -m -s /bin/bash xifei
*   Step2:配置新用户密码
*   passwd 用户名
*   Step3：给新添加的用户增加ROOT权限
visudo/etc/sudoers
然后添加：
xifei ALL=(ALL:ALL) ALL

另外，如果直接用useradd添加用户的话，可能出现没有home下的文件夹，以及shell无法自动补全的显现。出现此问题只要修改/etc/passwd下的/bin/sh为/bin/bash即可。


##ssh连接就断开
Just comment this line in file “/etc/pam.d/sshd”:
注释
session required        pam_loginuid.so
www.jb51.net/article/47764.htm

##批量刪除spark work日志

find /log_data/spark_work_data/ -name 'app-2015*'  | xargs rm -rf

find /log_data/spark_work_data/ -name 'app-201601*'  | xargs rm -rf

find /log_data/spark_work_data/ -name 'app-201602*'  | xargs rm -rf

find /log_data/spark_work_data/ -name 'app-201603*'  | xargs rm -rf



##防火墙

vim /etc/sysconfig/iptables

-A INPUT -p tcp -m state --state NEW -m tcp --dport 9160 -j ACCEPT

公钥私钥验证
ssh-keygen -l


supervisorctl
conf : /etc/supervisord.d/
更新新的配置到supervisord
supervisorctl update

mysql centos7
https://blog.csdn.net/runner1920/article/details/79495368


<<<<<<< .merge_file_a07596
#   vituralbox 共享目录 
*	sudo usermod -aG vboxsf $(whoami)
=======
挂载目录
*	 fdisk -l
*	blkid
*	--磁盘挂载
mkdir /data
mkfs.ext4 /dev/vdb1
mount /dev/vdb1 /data
>>>>>>> .merge_file_a08476
